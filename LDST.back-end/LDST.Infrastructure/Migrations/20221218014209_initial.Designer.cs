// <auto-generated />
using System;
using System.Collections.Generic;
using LDST.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LDST.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221218014209_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LDST.Domain.EFModels.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("GameReservationId")
                        .HasColumnType("integer");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GameReservationId")
                        .IsUnique();

                    b.HasIndex("GuestId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.GameReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("GameTimeslotId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("GameReservations");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.GameTimeslot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameReservationId")
                        .HasColumnType("integer");

                    b.Property<int>("GameTimeslotStatus")
                        .HasColumnType("integer");

                    b.Property<int>("PlaygroundId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("GameReservationId")
                        .IsUnique();

                    b.HasIndex("PlaygroundId");

                    b.ToTable("GameTimeslots");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Host", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Playground", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("AverageRating")
                        .HasColumnType("numeric");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("PhotoPaths")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Sport")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitlePhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Playgrounds");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.PlaygroundGuestRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("PlaygroundId")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("PlaygroundId");

                    b.ToTable("PlaygroundGuestRating");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Bill", b =>
                {
                    b.HasOne("LDST.Domain.EFModels.GameReservation", "GameReservation")
                        .WithOne("Bill")
                        .HasForeignKey("LDST.Domain.EFModels.Bill", "GameReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LDST.Domain.EFModels.Guest", "Guest")
                        .WithMany("Bills")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameReservation");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.GameReservation", b =>
                {
                    b.HasOne("LDST.Domain.EFModels.Guest", "Guest")
                        .WithMany("GameReservations")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.GameTimeslot", b =>
                {
                    b.HasOne("LDST.Domain.EFModels.GameReservation", "GameReservation")
                        .WithOne("GameTimeslot")
                        .HasForeignKey("LDST.Domain.EFModels.GameTimeslot", "GameReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LDST.Domain.EFModels.Playground", "Playground")
                        .WithMany("GameTimeslots")
                        .HasForeignKey("PlaygroundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameReservation");

                    b.Navigation("Playground");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Guest", b =>
                {
                    b.HasOne("LDST.Domain.EFModels.User", "User")
                        .WithOne("Guest")
                        .HasForeignKey("LDST.Domain.EFModels.Guest", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Host", b =>
                {
                    b.HasOne("LDST.Domain.EFModels.User", "User")
                        .WithOne("Host")
                        .HasForeignKey("LDST.Domain.EFModels.Host", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Playground", b =>
                {
                    b.HasOne("LDST.Domain.EFModels.Host", "Host")
                        .WithMany("Playgrounds")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Host");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.PlaygroundGuestRating", b =>
                {
                    b.HasOne("LDST.Domain.EFModels.Guest", "Guest")
                        .WithMany("PlaygroundGuestRatings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LDST.Domain.EFModels.Playground", "Playground")
                        .WithMany("PlaygroundGuestRatings")
                        .HasForeignKey("PlaygroundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Playground");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.GameReservation", b =>
                {
                    b.Navigation("Bill");

                    b.Navigation("GameTimeslot")
                        .IsRequired();
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Guest", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("GameReservations");

                    b.Navigation("PlaygroundGuestRatings");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Host", b =>
                {
                    b.Navigation("Playgrounds");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.Playground", b =>
                {
                    b.Navigation("GameTimeslots");

                    b.Navigation("PlaygroundGuestRatings");
                });

            modelBuilder.Entity("LDST.Domain.EFModels.User", b =>
                {
                    b.Navigation("Guest");

                    b.Navigation("Host");
                });
#pragma warning restore 612, 618
        }
    }
}
